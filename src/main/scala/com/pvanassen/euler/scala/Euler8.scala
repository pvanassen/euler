package com.pvanassen.euler.scala

import scala.language.implicitConversions

/**
 *
 * @author Paul van Assen
 *
 */
class Euler8 extends EulerSolution {
  val problemNumber = 8
  def number:String = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478" +
    "8518438586156078911294949545950173795833195285320880551112540698747158523863050715693290963295227443043557668966" +
    "4895044524452316173185640309871112172238311362229893423380308135336276614282806444486645238749303589072962904915" +
    "6044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218" +
    "0975125454059475224352584907711670556013604839586446706324415722155397536978179778461740649551492908625693219784" +
    "6862248283972241375657056057490261407972968652414535100474821663704844031998900088952434506585412275886668811642" +
    "7171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562" +
    "6321111109370544217506941658960408071984038509624554443629812309878799272442849091888458015616609791913387549920" +
    "0524063689912560717606058861164671094050775410022569831552000559357297257163626956188267042825248360082325753042" +
    "0752963450"
  protected def execute(): String ={
    return number.map(s => s.asDigit.toLong).sliding(13).map(_.product).max.toString
  }

}
